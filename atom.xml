<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ykgarfield</title>
  
  <subtitle>ykgarfield blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ykgarfield.github.io/"/>
  <updated>2018-12-28T05:32:17.466Z</updated>
  <id>https://ykgarfield.github.io/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Swagger bug-当 http 请求方法是 get 时 Operation.getConsumes() 不应该返回 application/json</title>
    <link href="https://ykgarfield.github.io/2018/12/25/%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/swagger/Swagger-bug-%E5%BD%93-http-%E8%AF%B7%E6%B1%82%E6%96%B9%E6%B3%95%E6%98%AF-get-%E6%97%B6-Operation.getConsumes()-%E4%B8%8D%E5%BA%94%E8%AF%A5%E8%BF%94%E5%9B%9E-application-json/"/>
    <id>https://ykgarfield.github.io/2018/12/25/文档工具/swagger/Swagger-bug-当-http-请求方法是-get-时-Operation.getConsumes()-不应该返回-application-json/</id>
    <published>2018-12-24T16:00:00.000Z</published>
    <updated>2018-12-28T05:32:17.466Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题由来"><a href="#问题由来" class="headerlink" title="问题由来"></a>问题由来</h1><p>相关的 issue 可见: <a href="https://github.com/springfox/springfox/issues/2815" target="_blank" rel="noopener">https://github.com/springfox/springfox/issues/2815</a></p><p>最近在用 swagger lib 的时候发现一个问题, 就是当 HTTP 请求方法是 <code>GET</code>  时候, 返回的 <code>consume</code> 是 <code>application/json</code>, 感觉有些不对劲,  于是乎就做了如下的实验:</p><p>比如有如下一个方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@Api</span>(value =<span class="string">"SwaggerTestService"</span>, tags = <span class="string">"SwaggerTest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerTestController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(value= <span class="string">"/SwaggerTest/getMethodTest"</span>,method = RequestMethod.GET)</span><br><span class="line">    <span class="meta">@ApiOperation</span>(value=<span class="string">"(SwaggerTestService) getMethodTest"</span>, notes=<span class="string">"(SwaggerTestService) getMethodTest"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> BaseResponse <span class="title">getMethodTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当访问 <code>/v2/api-docs</code> 的时候返回的信息如下:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">"/SwaggerTest/getMethodTest": &#123;</span><br><span class="line">"get": &#123;</span><br><span class="line">"tags": [</span><br><span class="line"><span class="string">"SwaggerTest"</span></span><br><span class="line">],</span><br><span class="line">"summary": "(SwaggerTestService) getMethodTest",</span><br><span class="line">"description": "(SwaggerTestService) getMethodTest",</span><br><span class="line">"consumes": [</span><br><span class="line"><span class="string">"application/json"</span></span><br><span class="line">],</span><br><span class="line">"produces": [</span><br><span class="line"><span class="string">"*/*"</span></span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现这里 <code>consumes</code> 返回的是 <code>application/json</code>, 稍微思考下, 会发现其实是不太对的.其实这就意味着 GET 请求的 <code>Content-Type</code> 是  <code>application/json</code>, 但是 HTTP GET 请求怎么会是 <code>application/json</code> 呢? 显然是不对的.相关的 GET 请求是否需要 <code>Content-Type</code> 讨论可见: <a href="https://stackoverflow.com/questions/5661596/do-i-need-a-content-type-for-http-get-requests" target="_blank" rel="noopener">https://stackoverflow.com/questions/5661596/do-i-need-a-content-type-for-http-get-requests</a>, 从中我们可以看出, 只有 <code>POST</code> 和 <code>PUT</code> 需要请求的 <code>Content-Type</code>.</p><p>因为是使用 swagger lib 相关 API 的时候发现的问题, 所以进一步发现是因为 <code>io.swagger.models.Operation#getConsumes()</code> 的返回值有问题.所以在我们使用此 API 的时候, 需要注意, 如果是 <code>GET</code> 请求, 那么是可以忽略此方法的返回值的.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题由来&quot;&gt;&lt;a href=&quot;#问题由来&quot; class=&quot;headerlink&quot; title=&quot;问题由来&quot;&gt;&lt;/a&gt;问题由来&lt;/h1&gt;&lt;p&gt;相关的 issue 可见: &lt;a href=&quot;https://github.com/springfox/springfox/
      
    
    </summary>
    
      <category term="文档工具" scheme="https://ykgarfield.github.io/categories/%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/"/>
    
      <category term="swagger" scheme="https://ykgarfield.github.io/categories/%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/swagger/"/>
    
    
      <category term="swagger" scheme="https://ykgarfield.github.io/tags/swagger/"/>
    
      <category term="swagger bug" scheme="https://ykgarfield.github.io/tags/swagger-bug/"/>
    
  </entry>
  
  <entry>
    <title>confluence-记一次 confluence markdown 表格样式丑陋发生的事</title>
    <link href="https://ykgarfield.github.io/2018/12/23/%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/confluence/confluence-%E8%AE%B0%E4%B8%80%E6%AC%A1-confluence-markdown-%E8%A1%A8%E6%A0%BC%E6%A0%B7%E5%BC%8F%E4%B8%91%E9%99%8B%E5%8F%91%E7%94%9F%E7%9A%84%E4%BA%8B/"/>
    <id>https://ykgarfield.github.io/2018/12/23/文档工具/confluence/confluence-记一次-confluence-markdown-表格样式丑陋发生的事/</id>
    <published>2018-12-22T16:00:00.000Z</published>
    <updated>2018-12-28T07:59:34.949Z</updated>
    
    <content type="html"><![CDATA[<p>最近在用 confluence markdown 插件(免费)的时候, 发现生成的表格样式实在不太美观, 甚至有点丑陋:</p><p><img src="https://www.github.com/ykgarfield/my-blog/raw/master/images/记一次_confluence_markdown_表格样式丑陋发生的事/markdown-table-style-ugly.jpg" alt="markdown-table-style-ugly"></p><p>再看看 confluence 原生表格的样式做个对比:</p><p><img src="https://www.github.com/ykgarfield/my-blog/raw/master/images/记一次_confluence_markdown_表格样式丑陋发生的事/markdown-native-table-style-diff.jpg" alt="markdown-native-table-style-diff"></p><p>不知道之前用 markdown 插件写作的人是怎么能忍受这种表格样式的.</p><p>于是乎就去评论了一下, 没想到的是很快就得到了回复.详情可见: <a href="https://marketplace.atlassian.com/apps/1211438/markdown-macro-for-confluence?hosting=server&amp;tab=reviews" target="_blank" rel="noopener">https://marketplace.atlassian.com/apps/1211438/markdown-macro-for-confluence?hosting=server&amp;tab=reviews</a></p><p>接下来就继续与作者进行沟通, 不过并没有抱太大期望.意外不到的是, 作者提供了一个新版本的插件 jar 包给我, 让我试试看, 有些意外和惊喜.</p><p>后面的沟通都是通过 <a href="https://atlasauthority.atlassian.net/servicedesk/customer/portal/1/SUPPORT-111" target="_blank" rel="noopener">https://atlasauthority.atlassian.net/servicedesk/customer/portal/1/SUPPORT-111</a></p><p>因为一开始并不太熟悉怎么进行升级, 所以一开始升级的时候出了问题.在 <code>SUPPORT-111</code> 也有详细描述, 后来重新思考, 通过 <code>Atlassian Marketplace -&gt; 管理插件 -&gt; 上传插件</code> 的方式进行更新.更新完成之后, 表格的样式终于有了变化, 使用了 confluence 本地的样式.</p><p>此插件也于 2018.12.24 发布了新版本.</p><p>回顾整件事, 其实也是一个无心之举, 只是想去吐槽下.没想到作者也比较热心, 很快就对这个问题进行了修改.再此, 还是很感谢作者把免费插件做的这么好.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在用 confluence markdown 插件(免费)的时候, 发现生成的表格样式实在不太美观, 甚至有点丑陋:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.github.com/ykgarfield/my-blog/raw/master/images
      
    
    </summary>
    
      <category term="文档工具" scheme="https://ykgarfield.github.io/categories/%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/"/>
    
      <category term="confluence" scheme="https://ykgarfield.github.io/categories/%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/confluence/"/>
    
    
      <category term="confluence" scheme="https://ykgarfield.github.io/tags/confluence/"/>
    
      <category term="confluence markdown" scheme="https://ykgarfield.github.io/tags/confluence-markdown/"/>
    
  </entry>
  
  <entry>
    <title>confluence-如何通过程序在 confluence 中创建 markdown 文档</title>
    <link href="https://ykgarfield.github.io/2018/12/23/%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/confluence/confluence-%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87%E7%A8%8B%E5%BA%8F%E5%9C%A8-confluence-%E4%B8%AD%E5%88%9B%E5%BB%BA-markdown-%E6%96%87%E6%A1%A3/"/>
    <id>https://ykgarfield.github.io/2018/12/23/文档工具/confluence/confluence-如何通过程序在-confluence-中创建-markdown-文档/</id>
    <published>2018-12-22T16:00:00.000Z</published>
    <updated>2018-12-28T07:59:27.701Z</updated>
    
    <content type="html"><![CDATA[<p>在 confluence 中创建 markdown 文档, 首先需要安装相关的 markdown 插件.既有免费的, 也有付费的.经过试用付费的 markdown 插件, 和免费的对比一下, 发现大部分 markdown 相关的功能都基本一致.付费的提供了一些额外的特性, 比如: 允许使用 html 标签、可选择渲染表格的样式等, 另外就是提供了一个很方便的功能就是可以直接将 markdown 文件上传为附件, 并用此插件插入附件 markdown 文档.而且渲染出来的表格样式比免费的要美观很多.免费的 markdown 插件渲染出来的表格样式实在有点不忍直视, 比较丑陋.</p><p>另外, 无论是免费的还是付费的 markdown 插件都是不支持生成目录语法.大多数平台和 markdown 编辑器可以通过扩展的 <code>[toc]</code> 语法来实现生成目录.在 confluence  中需要插入目录宏, 而且还是可以定义展示的层级, 这个特性还是比较有用的.</p><p>不过为了节约成本, 我们当然还是优先选择免费的.通过人工操作, 写入 markdown 文档是很简单的, 但是怎么通过程序自动的在 confluence 中创建 markdown 文档呢? 目前也没有现成的 API 可以实现.不过通过人工操作并进行抓包, 我们发现可以利用以下几个 API 来实现此功能.这里将插入目录宏(Table of Contents)的操作一起加上.</p><ul><li>插入目录宏: 发起 <code>/rest/tinymce/1/macro/placeholder</code> 请求.</li><li>目录宏 draft: 发起 <code>/rest/tinymce/1/drafts</code> 请求.</li><li>插入 markdown 宏: 还是发起 <code>/rest/tinymce/1/macro/placeholder</code> 请求.</li><li>更新文档(draft status): 发起 <code>/rest/api/content/{id}?status=draft</code> 请求</li></ul><p>下面具体的来说明上面的几个步骤.</p><h2 id="插入目录宏"><a href="#插入目录宏" class="headerlink" title="插入目录宏"></a>插入目录宏</h2><p>发起 <code>/rest/tinymce/1/macro/placeholder</code> 请求.请求的示例如下:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"contentId"</span>:<span class="string">"6488066"</span>,</span><br><span class="line">    <span class="attr">"macro"</span>:&#123;</span><br><span class="line">        <span class="attr">"name"</span>:<span class="string">"toc"</span>,</span><br><span class="line">        <span class="attr">"params"</span>:&#123;</span><br><span class="line">            <span class="attr">"maxLevel"</span>:<span class="string">"2"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"body"</span>:<span class="string">""</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 可以看到, <code>contentId</code> 也就是 page 的 ID, <code>name</code> 固定为 <code>toc</code>, <code>maxLevel</code> 指定了目录展示的最大层次.这里只会展示两级.</p><p>响应示例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img class=&quot;editor-inline-macro&quot; src=&quot;/plugins/servlet/confluence/placeholder/macro?definition=e3RvYzptYXhMZXZlbD0yfQ&amp;amp;locale=zh_CN&amp;amp;version=2&quot; data-macro-name=&quot;toc&quot; data-macro-parameters=&quot;maxLevel=2&quot; data-macro-schema-version=&quot;1&quot;&gt;</span><br></pre></td></tr></table></figure><p>这里返回的信息需要保存下面, 后面还会使用到.</p><h2 id="目录宏-draft"><a href="#目录宏-draft" class="headerlink" title="目录宏 draft"></a>目录宏 draft</h2><p>发起 <code>/rest/tinymce/1/drafts</code> 请求.请求示例如下:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"draftId"</span>:<span class="string">"6488067"</span>,</span><br><span class="line">    <span class="attr">"pageId"</span>:<span class="string">"6488066"</span>,</span><br><span class="line">    <span class="attr">"parentPageId"</span>:<span class="string">"5898241"</span>,</span><br><span class="line">    <span class="attr">"type"</span>:<span class="string">"page"</span>,</span><br><span class="line">    <span class="attr">"title"</span>:<span class="string">"markdown测试"</span>,</span><br><span class="line">    <span class="attr">"spaceKey"</span>:<span class="string">"SPC"</span>,</span><br><span class="line">    <span class="attr">"content"</span>:<span class="string">"&lt;p&gt;&lt;img class="</span>editor-inline-macro<span class="string">" src="</span>http://localhost:<span class="number">8090</span>/plugins/servlet/confluence/placeholder/macro?definition=e3RvYzptYXhMZXZlbD0yfQ&amp;locale=zh_CN&amp;version=<span class="number">2</span><span class="string">" data-macro-name="</span>toc<span class="string">" data-macro-parameters="</span>maxLevel=<span class="number">2</span><span class="string">" data-macro-schema-version="</span><span class="number">1</span><span class="string">" /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;"</span>,</span><br><span class="line">    <span class="attr">"syncRev"</span>:<span class="string">"0.izAFz9oUJgl5fEP4WzBEKKI.1"</span>,</span><br><span class="line">    <span class="attr">"pageVersion"</span>:<span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到之前请求返回的数据在这步操作中需要使用到.</p><h2 id="插入-markdown-宏"><a href="#插入-markdown-宏" class="headerlink" title="插入 markdown 宏"></a>插入 markdown 宏</h2><p>和插入目录宏类似.只是请求参数稍有变化:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"contentId"</span>:<span class="string">"6488066"</span>,</span><br><span class="line">    <span class="attr">"macro"</span>:&#123;</span><br><span class="line">        <span class="attr">"name"</span>:<span class="string">"markdown"</span>,</span><br><span class="line">        <span class="attr">"params"</span>:&#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"body"</span>:<span class="string">""</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到很简单, 就是 <code>name</code> 指定为 <code>markdown</code>.响应示例如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;table class=&quot;wysiwyg-macro&quot; data-macro-name=&quot;markdown&quot; data-macro-schema-version=&quot;1&quot; style=&quot;background-image: url(/plugins/servlet/confluence/placeholder/macro-heading?definition=e21hcmtkb3dufQ&amp;amp;locale=zh_CN&amp;amp;version=2); background-repeat: no-repeat;&quot; data-macro-body-type=&quot;PLAIN_TEXT&quot;&gt;&lt;tr&gt;&lt;td class=&quot;wysiwyg-macro-body&quot;&gt;&lt;pre /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure><p>这里返回的内容也需要保存下来, 后面的操作需要使用到.</p><h2 id="更新文档-draft-status"><a href="#更新文档-draft-status" class="headerlink" title="更新文档(draft status)"></a>更新文档(draft status)</h2><p>这是最后一步, 发起 <code>/rest/api/content/{id}?status=draft</code> 请求.请求示例如下:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"status"</span>:<span class="string">"current"</span>,</span><br><span class="line">    <span class="attr">"title"</span>:<span class="string">"markdown测试"</span>,</span><br><span class="line">    <span class="attr">"space"</span>:&#123;</span><br><span class="line">        <span class="attr">"key"</span>:<span class="string">"SPC"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"body"</span>:&#123;</span><br><span class="line">        <span class="attr">"editor"</span>:&#123;</span><br><span class="line">            <span class="attr">"value"</span>:<span class="string">"&lt;p&gt;&lt;img class="</span>editor-inline-macro<span class="string">" src="</span>http://localhost:<span class="number">8090</span>/plugins/servlet/confluence/placeholder/macro?definition=e3RvYzptYXhMZXZlbD0yfQ&amp;locale=zh_CN&amp;version=<span class="number">2</span><span class="string">" data-macro-name="</span>toc<span class="string">" data-macro-parameters="</span>maxLevel=<span class="number">2</span><span class="string">" data-macro-schema-version="</span><span class="number">1</span><span class="string">" data-macro-id="</span><span class="number">50</span>c89389<span class="number">-2</span>ea5<span class="number">-43</span>cf-a582-d5b2ed3d4796<span class="string">" /&gt;&lt;/p&gt;&lt;table class="</span>wysiwyg-macro<span class="string">" style="</span>background-image: url('http://localhost:<span class="number">8090</span>/plugins/servlet/confluence/placeholder/macro-heading?definition=e21hcmtkb3dufQ&amp;locale=zh_CN&amp;version=<span class="number">2</span>'); background-repeat: no-repeat;<span class="string">" data-macro-name="</span>markdown<span class="string">" data-macro-schema-version="</span><span class="number">1</span><span class="string">" data-macro-body-type="</span>PLAIN_TEXT<span class="string">"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="</span>wysiwyg-macro-body<span class="string">"&gt;&lt;pre&gt;# 概要&lt;br /&gt;&lt;br /&gt;本文档描述了...&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;"</span>,</span><br><span class="line">            <span class="attr">"representation"</span>:<span class="string">"editor"</span>,</span><br><span class="line">            <span class="attr">"content"</span>:&#123;</span><br><span class="line">                <span class="attr">"id"</span>:<span class="string">"6488066"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"id"</span>:<span class="string">"6488066"</span>,</span><br><span class="line">    <span class="attr">"type"</span>:<span class="string">"page"</span>,</span><br><span class="line">    <span class="attr">"version"</span>:&#123;</span><br><span class="line">        <span class="attr">"number"</span>:<span class="number">5</span>,</span><br><span class="line">        <span class="attr">"message"</span>:<span class="string">""</span>,</span><br><span class="line">        <span class="attr">"minorEdit"</span>:<span class="literal">false</span>,</span><br><span class="line">        <span class="attr">"syncRev"</span>:<span class="string">"0.yM8srPzow93w6esMsDjIuXE.2"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"ancestors"</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"id"</span>:<span class="string">"5898241"</span>,</span><br><span class="line">            <span class="attr">"type"</span>:<span class="string">"page"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现请求中的 <code>editor</code> 中的数据, 是把第一步和第三步返回的数据拼接在了一起, 并且在第三步返回的数据中插入了我们实际要写入的 mardown 的内容.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;table class=&quot;...&quot; style=&quot;...&quot; data-macro-body-type=&quot;...&quot;&gt;&lt;tr&gt;&lt;td class=&quot;...&quot;&gt;在这里插入实际的 markdown 内容&lt;pre /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure><p>通过以上的 4 个步骤我们就可以完成通过程序自动化地在 confluence 中创建 markdown 文档.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 confluence 中创建 markdown 文档, 首先需要安装相关的 markdown 插件.既有免费的, 也有付费的.经过试用付费的 markdown 插件, 和免费的对比一下, 发现大部分 markdown 相关的功能都基本一致.付费的提供了一些额外的特性, 
      
    
    </summary>
    
      <category term="文档工具" scheme="https://ykgarfield.github.io/categories/%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/"/>
    
      <category term="confluence" scheme="https://ykgarfield.github.io/categories/%E6%96%87%E6%A1%A3%E5%B7%A5%E5%85%B7/confluence/"/>
    
    
      <category term="confluence" scheme="https://ykgarfield.github.io/tags/confluence/"/>
    
      <category term="confluence markdown" scheme="https://ykgarfield.github.io/tags/confluence-markdown/"/>
    
  </entry>
  
</feed>
